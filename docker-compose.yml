name: atendeja-chatbot

services:
  postgres:
    image: postgres:16-alpine
    container_name: atendeja-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-atendeja}
      POSTGRES_USER: ${POSTGRES_USER:-atendeja}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-atendeja}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-atendeja}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: atendeja-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    container_name: atendeja-api
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

  worker:
    build: .
    container_name: atendeja-worker
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["celery", "-A", "app.workers.celery_app.celery", "worker", "--loglevel=INFO"]

  adminer:
    image: adminer:4
    container_name: atendeja-adminer
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"

  # Optional profile: Metabase for business dashboards
  metabase:
    image: metabase/metabase:latest
    container_name: atendeja-metabase
    profiles: ["dashboards"]
    environment:
      MB_DB_FILE: /metabase-data/metabase.db
    volumes:
      - metabase-data:/metabase-data
    ports:
      - "3000:3000"

volumes:
  pgdata:
  metabase-data:
